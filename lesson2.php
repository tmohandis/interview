<?php
//1. Какие типы паттернов проектирования существуют?
//Ответ: Порождающие, Структурные, Поведенческие

//2. Как можно улучшить Singleton при помощи trait-ов?
//Ответ: Можно реализовать Singleton в виде трейта и подключать его в необходимым классам

//3. Как реализуется паттерн Фабричный метод? В чем его отличие от паттерна Фабрика?
// Действительно затрудняюсь ответить:)

//4. Объясните назначение и применение магических методов __get, __set, __isset, __unset, __call и __callStatic.
//Когда, как и почему их стоит использовать (или нет)?
//Ответ: get и set вызываются при определении или получении значения переменной класса.
//isset - вызывается при проверке на имеющееся установленное значение, unset - при удалении значения
//call и callStatic - при вызове и статическом вызове функции.
//Стоит использовать при необходимости нестандарного поведения объекта при данных событиях.

//5.Опишите несколько структур данных из стандартной библиотеки PHP (SPL). Приведите примеры использования.

//6. Найдите все ошибки в коде:

//Уровни доступа для интерфейса
interface MyInt {
    public function funcI();
    private function funcP();
}
class A {
    protected prop1;
    private prop2;

    //Во всех дочерних классах будет конфликт из за доступа к переменной prop2
    function funcA(){
        return $this->prop2;
    }
}
class B extends A {
    function funcB(){
        return $this->prop1;
    }
}
//Данный класс не реализует функцию funcI интерфейса MyInt
class C extends B implements MyInt {

    //Функция в данном виде уже реализована в классе В
    function funcB(){
        return $this->prop1;
    }
    private function funcP(){
        return 123;
    }
}
$b = new B();
$b->funcA();
$c = new C();
$c->funcI();